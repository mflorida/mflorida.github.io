{"version":3,"sources":["_helpers/useRequest.js","LoadingRequest.js","CustomerList.js","App.js","index.js"],"names":["useRequest","opts","toWatch","useState","response","setResponse","request","setRequest","useEffect","url","req","axios","then","resp","doRequest","concat","LoadingRequest","props","status","test","className","style","maxWidth","statusText","type","role","text","sumAmounts","input","reduce","prev","curr","popCount","DetailsLink","amounts","counter","Array","spent","length","fill","popId","detailsPopover","Popover","id","Content","padding","Table","striped","bordered","hover","size","margin","map","item","i","key","rewards","OverlayTrigger","rootClose","trigger","placement","overlay","href","children","CustomerTableHeader","count","x","colSpan","CustomerRow","customer","customerTotals","totals","monthlyTotals","mo","spentx","rewardsx","textAlign","paddingLeft","firstName","lastName","CustomerTable","monthCount","data","variant","idx","CustomerList","method","App","Container","Row","paddingTop","Col","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4b4bea1.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n/**\n * Get data and use the response in a React hook\n * @param {Object} opts - axios config object string for GET request\n * @param {*} [toWatch] - optional variable to watch to trigger a new request\n * @returns {*[]}\n */\nexport function useRequest(opts, toWatch){\n\n    // console.log('useRequest');\n\n    const [response, setResponse] = useState(null);\n    const [request, setRequest] = useState(null);\n\n    const doRequest = function(){\n\n        if (opts.url) {\n\n            const req = axios(opts);\n\n            setRequest(req);\n\n            req.then((resp) => {\n                setResponse(resp);\n                // console.log('useRequest:response');\n                // console.log(resp);\n                return resp;\n            });\n\n        }\n\n    };\n\n    useEffect(() => {\n        doRequest();\n    }, toWatch ? [].concat(toWatch) : []);\n\n    return [response, request];\n\n}\n","import React from 'react';\n\n/**\n * Generic light-colored spinner\n * @param props\n * @returns {*}\n * @constructor\n */\nexport default function LoadingRequest(props){\n    if (props.req && props.req.status && !/^2/.test(props.req.status)) {\n        return (\n            <div className=\"card text-white bg-danger mb-3\" style={{ maxWidth: '24rem' }}>\n                <div className=\"card-header\">An Error Occured</div>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Status {props.req.status}</h5>\n                    <p className=\"card-text\">\n                        {props.req.statusText}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className={`spinner-boarder ${props.type ? props.type : 'text-light'}`} role=\"status\">\n                <span className=\"sr-only\">{props.text || 'Loading...'}</span>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Table, Popover, OverlayTrigger } from 'react-bootstrap';\nimport { useRequest } from './_helpers/useRequest';\nimport LoadingRequest from './LoadingRequest';\n\n// helper for easier adding up amounts in array\nfunction sumAmounts(input){\n    return input.reduce((prev, curr) => (prev + curr));\n}\n\nlet popCount = 0;\n\nfunction DetailsLink(props){\n\n    const { amounts } = props;\n\n    const counter = (new Array(amounts.spent.length)).fill('');\n\n    const popId = 'pop' + (popCount += 1);\n\n    const detailsPopover = (\n        <Popover id={popId}>\n            {/*<Popover.Title>Details</Popover.Title>*/}\n            <Popover.Content style={{ padding: '.5rem' }}>\n                <Table striped bordered hover size=\"sm\" style={{ margin: 0 }}>\n                    <thead>\n                    <tr>\n                        <th>Spent</th>\n                        <th>Points</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {counter.map(function(item, i){\n                        return (\n                            <tr key={i}>\n                                <td>${amounts.spent[i]}</td>\n                                <td>{amounts.rewards[i]}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>\n            </Popover.Content>\n        </Popover>\n    )\n\n    return (\n            <OverlayTrigger rootClose={true} trigger=\"click\" placement=\"right\" overlay={detailsPopover}>\n                <a href=\"#!\">{props.children}</a>\n            </OverlayTrigger>\n    )\n\n}\n\nfunction CustomerTableHeader(props){\n    return <thead>\n    <tr>\n        <th>Customer Name</th>\n        {(new Array(props.count)).fill('').map((x, i) => (\n            <th colSpan={3}>Month {i + 1}</th>\n        ))}\n        <th>Total Spent</th>\n        <th>Total Points</th>\n    </tr>\n    </thead>\n}\n\nfunction CustomerRow(props){\n\n    const { count, customer } = props;\n\n    const amounts = customer.amounts;\n\n    const customerTotals = {\n        spent: amounts.map((item, i) => {\n            return item.totals.spent\n        }).reduce((prev, curr) => prev + curr),\n        rewards: amounts.map((item, i) => {\n            return item.totals.rewards\n        }).reduce((prev, curr) => prev + curr)\n    }\n\n    const monthlyTotals = amounts.map(function(mo, i){\n        return {\n            spentx: mo.spent.reduce(function(prev, curr){\n                return prev + curr\n            }),\n            spent: sumAmounts(mo.spent),\n            rewardsx: mo.rewards.reduce(function(prev, curr){\n                return prev + curr\n            }),\n            rewards: sumAmounts(mo.rewards)\n        }\n    })\n\n    return <tr>\n        <td style={{ textAlign: 'left', paddingLeft: '10px' }}>{`${customer.firstName} ${customer.lastName}`}</td>\n        {monthlyTotals.map((item, i) => (\n            <>\n                <td>${item.spent}</td>\n                <td>{item.rewards} pts</td>\n                <td><DetailsLink amounts={amounts[i]}>info</DetailsLink></td>\n            </>\n        ))}\n        <td>${customerTotals.spent}</td>\n        <td>{customerTotals.rewards}</td>\n    </tr>\n}\n\nfunction CustomerTable(props){\n    {/* look at the first item to determine number of month header rows */}\n    const monthCount = props.data[0].amounts.length;\n    return <Table striped bordered hover size=\"sm\" variant={'dark'}>\n        <CustomerTableHeader count={monthCount}/>\n        <tbody>\n        {props.data.map((item, idx) => (\n            <CustomerRow key={idx} count={monthCount} customer={item}/>\n        ))}\n        </tbody>\n    </Table>\n\n}\n\nexport default function CustomerList(){\n\n    const [response, request] = useRequest({\n            url: 'data/customerData.json',\n            method: 'GET'\n        }\n    );\n\n    return <>\n        {!response || !response.data ? (\n            <LoadingRequest/>\n        ) : (\n            <CustomerTable data={response.data}/>\n        )}\n    </>\n\n}\n","import React from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport CustomerList from './CustomerList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n        <Container>\n            <Row>\n                <h2 style={{ margin: '20px auto 10px' }}>Customer Rewards Data</h2>\n            </Row>\n            <Row style={{ margin: 0 }}>\n                <p style={{ margin: '0 auto 20px' }}>\n                    Click the 'info' links to reveal rewards data details per customer per month.\n                </p>\n            </Row>\n            {/*<Row style={{ borderBottom: '1px solid #ccc' }}/>*/}\n            <Row style={{ paddingTop: '20px' }}>\n                <Col style={{ padding: 0 }}>\n\n                    <CustomerList/>\n\n                </Col>\n            </Row>\n        </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}